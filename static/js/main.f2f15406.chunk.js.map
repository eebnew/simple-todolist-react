{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setFilter","inputText","setInputText","todos","setTodos","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","map","todo","filter","TodoList","todosFiltered","App","useState","setTodosFiltered","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2f15406.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({setFilter, inputText, setInputText, todos, setTodos}) => {\r\n  const inputTextHandler = (e)=>{\r\n    setInputText(e.target.value);\r\n  }\r\n  const submitTodoHandler = (e)=>{\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos, {text: inputText, completed: false, id: Math.random() * 1000}\r\n    ]);\r\n    setInputText(\"\");\r\n  }\r\n  const filterHandler = (e) => {\r\n    setFilter(e.target.value);\r\n  }\r\n  return(\r\n    <form>\r\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={filterHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Todo = ({id, completed, text, setTodos, todos}) => {\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter(todo => (todo.id !== id)));\r\n    }\r\n    const completeHandler = () => {\r\n        setTodos(todos.map(todo => {\r\n            if(todo.id === id){\r\n                return{...todo, completed: !todo.completed}\r\n            }\r\n            return todo;\r\n        }));\r\n    }\r\n    return(\r\n    <div className=\"todo\">\r\n        <li className={`todo-item ${completed ? \"completed\" : \"\"}`}>{text}</li>\r\n        <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\r\n        <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({setTodos, todos, todosFiltered}) => {\r\n    return(\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {todosFiltered.map(todo => (\r\n          <Todo setTodos={setTodos} id={todo.id} completed={todo.completed} todos={todos} key={todo.id} text={todo.text}/>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React, {useState, useEffect} from 'react';\nimport './App.css';\n//components\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [todosFiltered, setTodosFiltered] = useState([]);\n  \n  useEffect(()=>{\n    getLocalTodos();\n  }, []);\n\n  useEffect(()=>{\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, filter]);\n  \n  const filterHandler = () => {\n    switch (filter) {\n      case \"completed\":\n        setTodosFiltered(todos.filter(todo => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setTodosFiltered(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setTodosFiltered(todos);\n        break;\n      }\n    }\n    \n    const saveLocalTodos = () => {\n      localStorage.setItem('todos', JSON.stringify(todos));\n    }\n    const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodos(todoLocal);\n    }\n  }\n  \n  return (\n    <div className=\"App\">\n      <header>\n        <h1>My Todo List</h1>\n      </header>\n      <Form setFilter={setFilter} todos={todos} setTodos={setTodos} inputText={inputText} setInputText={setInputText}/>\n      <TodoList todosFiltered={todosFiltered} setTodos={setTodos} todos={todos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}